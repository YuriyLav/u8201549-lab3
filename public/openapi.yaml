openapi: "3.0.0"
info:
  description: "Swagger Company with Departments and Employees"
  version: "1.0.0"
  title: "Company"
servers:
  - url: /api/v1
tags:
- name: "companies"
  description: "companies managment"
- name: "departments"
  description: "departments managment"
- name: "employees"
  description: "employees managment"
paths:
  /companies:
    post:
      summary: "create a company"
      operationId: "create company"
      tags:
        - companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /companies/{id}:
    get:
      summary: "get company by id"
      operationId: "get company"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: "delete company by id"
      operationId: "deleteCompany"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      summary: "replace company"
      operationId: "putCompany"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      summary: "update company"
      operationId: "patchCompany"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
        - in: query
          name: "name"
          schema:
            type: string
        - in: query
          name: "address"
          schema:
            type: string
        - in: query
          name: "created_at"
          schema:
            type: string
            format: date-time
        - in: query
          name: "updated_at"
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /departments:
    post:
      summary: "create a department"
      operationId: "create department"
      tags:
        - departments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /departments/{id}:
    get:
      summary: "get department by id"
      operationId: "get department"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: "delete department by id"
      operationId: "deleteDepartment"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      summary: "replace department"
      operationId: "putDepartment"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      summary: "update department"
      operationId: "patchDepartment"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
        - in: query
          name: "name"
          schema:
            type: string
        - in: query
          name: "company_id"
          schema:
            type: integer
        - in: query
          name: "created_at"
          schema:
            type: string
            format: date-time
        - in: query
          name: "updated_at"
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /employees:
    post:
      summary: "create a employee"
      operationId: "create employee"
      tags:
        - employees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /employees/{id}:
    get:
      summary: "get employee by id"
      operationId: "get employee"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      summary: "delete employee by id"
      operationId: "deleteEmployee"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type : integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      summary: "replace employee"
      operationId: "putEmployee"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      summary: "update employee"
      operationId: "patchEmployee"
      parameters:
        - in: path
          name: "id"
          required: true
          schema:
            type: integer
        - in: query
          name: "name"
          schema:
            type: string
        - in: query
          name: "email"
          schema:
            type: string
        - in: query
          name: "department_id"
          schema:
            type: integer
        - in: query
          name: "created_at"
          schema:
            type: string
            format: date-time
        - in: query
          name: "updated_at"
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "400": 
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        default:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas: 
    Company:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
        address:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Department:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
        company_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Employee:
      type: object
      properties:
        id: 
          type: integer
        name:
          type: string
        email:
          type: string
        department_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Response:
      type: object
      properties:
        data:
          oneOf:
            - type: object
            - type: object
            - type: array
              items:
                type: object
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                $ref: '#/components/schemas/Code'
              message:
                type: string
              meta:
                type: object
        meta: 
          type: object
    Code:
      type: integer
      enum: [200,201 ,400, 401, 403, 404, 500]